<Activity mc:Ignorable="sap sap2010 sads" x:Class="RightScale._3Tier.Workflow.Windows3TierWorkflow" this:Windows3TierWorkflow.deploymentDescription="Workflow Created Deployment"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:rn="clr-namespace:RightScale.netClient;assembly=RightScale.netClient"
 xmlns:rna="clr-namespace:RightScale.netClient.ActivityLibrary;assembly=RightScale.netClient.ActivityLibrary"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:this="clr-namespace:RightScale._3Tier.Workflow"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="deploymentName" Type="InArgument(x:String)" />
    <x:Property Name="deploymentDescription" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="deploymentTagScope" Type="InArgument(x:String)" />
    <x:Property Name="deploymentID" Type="InOutArgument(x:String)" />
    <x:Property Name="rsOauthRefreshToken" Type="InArgument(x:String)" />
    <x:Property Name="rsUsername" Type="InArgument(x:String)" />
    <x:Property Name="rsPassword" Type="InArgument(x:String)" />
    <x:Property Name="rsAccountNo" Type="InArgument(x:String)" />
    <x:Property Name="serverLoadBalancerCount" Type="InArgument(x:String)" />
    <x:Property Name="serverSQLServerCount" Type="InArgument(x:String)" />
    <x:Property Name="serverIISServerMinCount" Type="InArgument(x:String)" />
    <x:Property Name="serverIISServerMaxCount" Type="InArgument(x:String)" />
    <x:Property Name="deploymentLevelInputs" Type="InArgument(scg:List(rn:Input))" />
    <x:Property Name="databaseDNSNames" Type="InArgument(scg:List(scg:KeyValuePair(x:String, x:String)))" />
    <x:Property Name="serverCloudID" Type="InArgument(x:String)" />
    <x:Property Name="lbServerIDs" Type="InOutArgument(scg:List(x:String))" />
    <x:Property Name="iisElasticityParams" Type="InArgument(scg:List(rn:ElasticityParam))" />
    <x:Property Name="serverArrayID" Type="InOutArgument(x:String)" />
    <x:Property Name="sqlServerIDs" Type="InOutArgument(scg:List(x:String))" />
    <x:Property Name="sqlServer1Launched" Type="InOutArgument(x:Boolean)" />
    <x:Property Name="sql1Inputs" Type="InArgument(scg:List(rn:Input))" />
    <x:Property Name="sql2Inputs" Type="InArgument(scg:List(rn:Input))" />
    <x:Property Name="serverIISServerTemplateID" Type="InOutArgument(x:String)" />
    <x:Property Name="serverSQLServerTemplateID" Type="InOutArgument(x:String)" />
    <x:Property Name="serverLBServerTemplateID" Type="InOutArgument(x:String)" />
    <x:Property Name="loadBalancerPublicationID" Type="InArgument(x:String)" />
    <x:Property Name="sqlServerPublicationID" Type="InArgument(x:String)" />
    <x:Property Name="iisServerPublicationID" Type="InArgument(x:String)" />
    <x:Property Name="loadBalancerInstanceTypeID" Type="InArgument(x:String)" />
    <x:Property Name="sqlServerInstanceTypeID" Type="InArgument(x:String)" />
    <x:Property Name="lbDNSDomainName" Type="InArgument(x:String)" />
    <x:Property Name="lb1DNSID" Type="InArgument(x:String)" />
    <x:Property Name="lb2DNSID" Type="InArgument(x:String)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>RightScale._3Tier.Workflow.Workflow1_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>RightScale.netClient</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Net</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>RightScale.netClient.ActivityLibrary</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>RightScale.3Tier.Workflow</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="3 Tier Deployment" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:TimeSpan" Name="APIQueryDelay">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="x:TimeSpan">new TimeSpan(0, 0, 20);</mca:CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:TimeSpan" Name="ParallelismDelay">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="x:TimeSpan">new TimeSpan(0, 0, 5);</mca:CSharpValue>
        </Variable.Default>
      </Variable>
    </Sequence.Variables>
    <Parallel DisplayName="Import ServerTemplates" sap2010:WorkflowViewState.IdRef="Parallel_6">
      <rna:ImportPublication DisplayName="Import LB ServerTemplate" sap2010:WorkflowViewState.IdRef="ImportPublication_1">
        <rna:ImportPublication.publicationID>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">loadBalancerPublicationID</mca:CSharpValue>
          </InArgument>
        </rna:ImportPublication.publicationID>
        <rna:ImportPublication.rsAccountID>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">rsAccountNo</mca:CSharpValue>
          </InArgument>
        </rna:ImportPublication.rsAccountID>
        <rna:ImportPublication.rsOAuthToken>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">rsOauthRefreshToken</mca:CSharpValue>
          </InArgument>
        </rna:ImportPublication.rsOAuthToken>
        <rna:ImportPublication.rsPassword>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">rsPassword</mca:CSharpValue>
          </InArgument>
        </rna:ImportPublication.rsPassword>
        <rna:ImportPublication.rsUserName>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">rsUsername</mca:CSharpValue>
          </InArgument>
        </rna:ImportPublication.rsUserName>
        <rna:ImportPublication.serverTemplateID>
          <OutArgument x:TypeArguments="x:String">
            <mca:CSharpReference x:TypeArguments="x:String">serverLBServerTemplateID</mca:CSharpReference>
          </OutArgument>
        </rna:ImportPublication.serverTemplateID>
      </rna:ImportPublication>
      <rna:ImportPublication DisplayName="Import SQL ServerTemplate" sap2010:WorkflowViewState.IdRef="ImportPublication_2">
        <rna:ImportPublication.publicationID>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">sqlServerPublicationID</mca:CSharpValue>
          </InArgument>
        </rna:ImportPublication.publicationID>
        <rna:ImportPublication.rsAccountID>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">rsAccountNo</mca:CSharpValue>
          </InArgument>
        </rna:ImportPublication.rsAccountID>
        <rna:ImportPublication.rsOAuthToken>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">rsOauthRefreshToken</mca:CSharpValue>
          </InArgument>
        </rna:ImportPublication.rsOAuthToken>
        <rna:ImportPublication.rsPassword>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">rsPassword</mca:CSharpValue>
          </InArgument>
        </rna:ImportPublication.rsPassword>
        <rna:ImportPublication.rsUserName>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">rsUsername</mca:CSharpValue>
          </InArgument>
        </rna:ImportPublication.rsUserName>
        <rna:ImportPublication.serverTemplateID>
          <OutArgument x:TypeArguments="x:String">
            <mca:CSharpReference x:TypeArguments="x:String">serverSQLServerTemplateID</mca:CSharpReference>
          </OutArgument>
        </rna:ImportPublication.serverTemplateID>
      </rna:ImportPublication>
      <rna:ImportPublication DisplayName="Import IIS ServerTemplate" sap2010:WorkflowViewState.IdRef="ImportPublication_3">
        <rna:ImportPublication.publicationID>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">iisServerPublicationID</mca:CSharpValue>
          </InArgument>
        </rna:ImportPublication.publicationID>
        <rna:ImportPublication.rsAccountID>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">rsAccountNo</mca:CSharpValue>
          </InArgument>
        </rna:ImportPublication.rsAccountID>
        <rna:ImportPublication.rsOAuthToken>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">rsOauthRefreshToken</mca:CSharpValue>
          </InArgument>
        </rna:ImportPublication.rsOAuthToken>
        <rna:ImportPublication.rsPassword>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">rsPassword</mca:CSharpValue>
          </InArgument>
        </rna:ImportPublication.rsPassword>
        <rna:ImportPublication.rsUserName>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">rsUsername</mca:CSharpValue>
          </InArgument>
        </rna:ImportPublication.rsUserName>
        <rna:ImportPublication.serverTemplateID>
          <OutArgument x:TypeArguments="x:String">
            <mca:CSharpReference x:TypeArguments="x:String">serverIISServerTemplateID</mca:CSharpReference>
          </OutArgument>
        </rna:ImportPublication.serverTemplateID>
      </rna:ImportPublication>
    </Parallel>
    <rna:CreateDeployment DisplayName="Create Deployment" sap2010:WorkflowViewState.IdRef="CreateDeployment_2">
      <rna:CreateDeployment.DeploymentDescription>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String">deploymentDescription</mca:CSharpValue>
        </InArgument>
      </rna:CreateDeployment.DeploymentDescription>
      <rna:CreateDeployment.DeploymentID>
        <OutArgument x:TypeArguments="x:String">
          <mca:CSharpReference x:TypeArguments="x:String">deploymentID</mca:CSharpReference>
        </OutArgument>
      </rna:CreateDeployment.DeploymentID>
      <rna:CreateDeployment.DeploymentName>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String">deploymentName</mca:CSharpValue>
        </InArgument>
      </rna:CreateDeployment.DeploymentName>
      <rna:CreateDeployment.DeploymentTagScope>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String">deploymentTagScope</mca:CSharpValue>
        </InArgument>
      </rna:CreateDeployment.DeploymentTagScope>
      <rna:CreateDeployment.inputs>
        <InArgument x:TypeArguments="scg:List(rn:Input)">
          <mca:CSharpValue x:TypeArguments="scg:List(rn:Input)">deploymentLevelInputs</mca:CSharpValue>
        </InArgument>
      </rna:CreateDeployment.inputs>
      <rna:CreateDeployment.rsAccountID>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String">rsAccountNo</mca:CSharpValue>
        </InArgument>
      </rna:CreateDeployment.rsAccountID>
      <rna:CreateDeployment.rsOAuthToken>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String">rsOauthRefreshToken</mca:CSharpValue>
        </InArgument>
      </rna:CreateDeployment.rsOAuthToken>
      <rna:CreateDeployment.rsPassword>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String">rsPassword</mca:CSharpValue>
        </InArgument>
      </rna:CreateDeployment.rsPassword>
      <rna:CreateDeployment.rsUserName>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String">rsUsername</mca:CSharpValue>
        </InArgument>
      </rna:CreateDeployment.rsUserName>
    </rna:CreateDeployment>
    <Parallel DisplayName="Create servers" sap2010:WorkflowViewState.IdRef="Parallel_2">
      <rna:CreateServer description="{x:Null}" imageID="{x:Null}" inputs="{x:Null}" kernelImageID="{x:Null}" multiCloudImageID="{x:Null}" optimized="{x:Null}" ramdiskImageID="{x:Null}" securityGroupIDs="{x:Null}" sshKeyID="{x:Null}" userData="{x:Null}" DisplayName="Create LB Servers" sap2010:WorkflowViewState.IdRef="CreateServer_3" name="HAProxy + Apache Load Balancer">
        <rna:CreateServer.cloudID>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">serverCloudID</mca:CSharpValue>
          </InArgument>
        </rna:CreateServer.cloudID>
        <rna:CreateServer.deploymentID>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">deploymentID</mca:CSharpValue>
          </InArgument>
        </rna:CreateServer.deploymentID>
        <rna:CreateServer.instanceTypeID>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">loadBalancerInstanceTypeID</mca:CSharpValue>
          </InArgument>
        </rna:CreateServer.instanceTypeID>
        <rna:CreateServer.numberOfServers>
          <InArgument x:TypeArguments="x:Int32">
            <mca:CSharpValue x:TypeArguments="x:Int32">int.Parse(serverLoadBalancerCount)</mca:CSharpValue>
          </InArgument>
        </rna:CreateServer.numberOfServers>
        <rna:CreateServer.rsAccountID>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">rsAccountNo</mca:CSharpValue>
          </InArgument>
        </rna:CreateServer.rsAccountID>
        <rna:CreateServer.rsOAuthToken>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">rsOauthRefreshToken</mca:CSharpValue>
          </InArgument>
        </rna:CreateServer.rsOAuthToken>
        <rna:CreateServer.rsPassword>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">rsPassword</mca:CSharpValue>
          </InArgument>
        </rna:CreateServer.rsPassword>
        <rna:CreateServer.rsUserName>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">rsUsername</mca:CSharpValue>
          </InArgument>
        </rna:CreateServer.rsUserName>
        <rna:CreateServer.serverIDs>
          <OutArgument x:TypeArguments="scg:List(x:String)">
            <mca:CSharpReference x:TypeArguments="scg:List(x:String)">lbServerIDs</mca:CSharpReference>
          </OutArgument>
        </rna:CreateServer.serverIDs>
        <rna:CreateServer.serverTemplateID>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">serverLBServerTemplateID</mca:CSharpValue>
          </InArgument>
        </rna:CreateServer.serverTemplateID>
      </rna:CreateServer>
      <rna:CreateServer description="{x:Null}" imageID="{x:Null}" inputs="{x:Null}" kernelImageID="{x:Null}" multiCloudImageID="{x:Null}" optimized="{x:Null}" ramdiskImageID="{x:Null}" securityGroupIDs="{x:Null}" sshKeyID="{x:Null}" userData="{x:Null}" DisplayName="Create SQL Servers" sap2010:WorkflowViewState.IdRef="CreateServer_4" name="SQL 2012 Server">
        <rna:CreateServer.cloudID>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">serverCloudID</mca:CSharpValue>
          </InArgument>
        </rna:CreateServer.cloudID>
        <rna:CreateServer.deploymentID>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">deploymentID</mca:CSharpValue>
          </InArgument>
        </rna:CreateServer.deploymentID>
        <rna:CreateServer.instanceTypeID>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">sqlServerInstanceTypeID</mca:CSharpValue>
          </InArgument>
        </rna:CreateServer.instanceTypeID>
        <rna:CreateServer.numberOfServers>
          <InArgument x:TypeArguments="x:Int32">
            <mca:CSharpValue x:TypeArguments="x:Int32">int.Parse(serverSQLServerCount)</mca:CSharpValue>
          </InArgument>
        </rna:CreateServer.numberOfServers>
        <rna:CreateServer.rsAccountID>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">rsAccountNo</mca:CSharpValue>
          </InArgument>
        </rna:CreateServer.rsAccountID>
        <rna:CreateServer.rsOAuthToken>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">rsOauthRefreshToken</mca:CSharpValue>
          </InArgument>
        </rna:CreateServer.rsOAuthToken>
        <rna:CreateServer.rsPassword>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">rsPassword</mca:CSharpValue>
          </InArgument>
        </rna:CreateServer.rsPassword>
        <rna:CreateServer.rsUserName>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">rsUsername</mca:CSharpValue>
          </InArgument>
        </rna:CreateServer.rsUserName>
        <rna:CreateServer.serverIDs>
          <OutArgument x:TypeArguments="scg:List(x:String)">
            <mca:CSharpReference x:TypeArguments="scg:List(x:String)">sqlServerIDs</mca:CSharpReference>
          </OutArgument>
        </rna:CreateServer.serverIDs>
        <rna:CreateServer.serverTemplateID>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">serverSQLServerTemplateID</mca:CSharpValue>
          </InArgument>
        </rna:CreateServer.serverTemplateID>
      </rna:CreateServer>
      <rna:CreateServerArray dataCenterID="{x:Null}" dataCenterPolicies="{x:Null}" description="{x:Null}" imageID="{x:Null}" inputs="{x:Null}" instanceTypeID="{x:Null}" kernelImageID="{x:Null}" multiCloudImageID="{x:Null}" optimized="{x:Null}" ramdiskImageID="{x:Null}" securityGroupIDs="{x:Null}" sshKeyID="{x:Null}" userData="{x:Null}" DisplayName="Create IIS Server Array" sap2010:WorkflowViewState.IdRef="CreateServerArray_2" arrayType="alert" name="MileageStats IIS App Tier" state="disabled">
        <rna:CreateServerArray.cloudID>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">serverCloudID</mca:CSharpValue>
          </InArgument>
        </rna:CreateServerArray.cloudID>
        <rna:CreateServerArray.deploymentID>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">deploymentID</mca:CSharpValue>
          </InArgument>
        </rna:CreateServerArray.deploymentID>
        <rna:CreateServerArray.elasticityParams>
          <InArgument x:TypeArguments="scg:List(rn:ElasticityParam)">
            <mca:CSharpValue x:TypeArguments="scg:List(rn:ElasticityParam)">iisElasticityParams</mca:CSharpValue>
          </InArgument>
        </rna:CreateServerArray.elasticityParams>
        <rna:CreateServerArray.rsAccountID>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">rsAccountNo</mca:CSharpValue>
          </InArgument>
        </rna:CreateServerArray.rsAccountID>
        <rna:CreateServerArray.rsOAuthToken>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">rsOauthRefreshToken</mca:CSharpValue>
          </InArgument>
        </rna:CreateServerArray.rsOAuthToken>
        <rna:CreateServerArray.rsPassword>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">rsPassword</mca:CSharpValue>
          </InArgument>
        </rna:CreateServerArray.rsPassword>
        <rna:CreateServerArray.rsUserName>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">rsUsername</mca:CSharpValue>
          </InArgument>
        </rna:CreateServerArray.rsUserName>
        <rna:CreateServerArray.serverArrayID>
          <OutArgument x:TypeArguments="x:String">
            <mca:CSharpReference x:TypeArguments="x:String">serverArrayID</mca:CSharpReference>
          </OutArgument>
        </rna:CreateServerArray.serverArrayID>
        <rna:CreateServerArray.serverTemplateID>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">serverIISServerTemplateID</mca:CSharpValue>
          </InArgument>
        </rna:CreateServerArray.serverTemplateID>
      </rna:CreateServerArray>
    </Parallel>
    <Parallel DisplayName="Update Server-Specific Inputs" sap2010:WorkflowViewState.IdRef="Parallel_5">
      <rna:UpdateInputs isUpdated="{x:Null}" DisplayName="Update SQL1 Inputs" sap2010:WorkflowViewState.IdRef="UpdateInputs_1">
        <rna:UpdateInputs.inputs>
          <InArgument x:TypeArguments="scg:List(rn:Input)">
            <mca:CSharpValue x:TypeArguments="scg:List(rn:Input)">sql1Inputs</mca:CSharpValue>
          </InArgument>
        </rna:UpdateInputs.inputs>
        <rna:UpdateInputs.rsAccountID>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">rsAccountNo</mca:CSharpValue>
          </InArgument>
        </rna:UpdateInputs.rsAccountID>
        <rna:UpdateInputs.rsOAuthToken>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">rsOauthRefreshToken</mca:CSharpValue>
          </InArgument>
        </rna:UpdateInputs.rsOAuthToken>
        <rna:UpdateInputs.rsPassword>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">rsPassword</mca:CSharpValue>
          </InArgument>
        </rna:UpdateInputs.rsPassword>
        <rna:UpdateInputs.rsUserName>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">rsUsername</mca:CSharpValue>
          </InArgument>
        </rna:UpdateInputs.rsUserName>
        <rna:UpdateInputs.serverID>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">sqlServerIDs[0]</mca:CSharpValue>
          </InArgument>
        </rna:UpdateInputs.serverID>
      </rna:UpdateInputs>
      <rna:UpdateInputs isUpdated="{x:Null}" DisplayName="Update SQL2 Inputs" sap2010:WorkflowViewState.IdRef="UpdateInputs_2">
        <rna:UpdateInputs.inputs>
          <InArgument x:TypeArguments="scg:List(rn:Input)">
            <mca:CSharpValue x:TypeArguments="scg:List(rn:Input)">sql2Inputs</mca:CSharpValue>
          </InArgument>
        </rna:UpdateInputs.inputs>
        <rna:UpdateInputs.rsAccountID>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">rsAccountNo</mca:CSharpValue>
          </InArgument>
        </rna:UpdateInputs.rsAccountID>
        <rna:UpdateInputs.rsOAuthToken>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">rsOauthRefreshToken</mca:CSharpValue>
          </InArgument>
        </rna:UpdateInputs.rsOAuthToken>
        <rna:UpdateInputs.rsPassword>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">rsPassword</mca:CSharpValue>
          </InArgument>
        </rna:UpdateInputs.rsPassword>
        <rna:UpdateInputs.rsUserName>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">rsUsername</mca:CSharpValue>
          </InArgument>
        </rna:UpdateInputs.rsUserName>
        <rna:UpdateInputs.serverID>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">sqlServerIDs[1]</mca:CSharpValue>
          </InArgument>
        </rna:UpdateInputs.serverID>
      </rna:UpdateInputs>
    </Parallel>
    <Parallel DisplayName="Parallel Launch Phase 1 (LB's and SQL Server 1)" sap2010:WorkflowViewState.IdRef="Parallel_3">
      <Sequence DisplayName="Build SQL Server 1 (Primary)" sap2010:WorkflowViewState.IdRef="Sequence_3">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="currentSQLServerState">
            <Variable.Default>
              <mca:CSharpValue x:TypeArguments="x:String">"inactive";</mca:CSharpValue>
            </Variable.Default>
          </Variable>
          <Variable x:TypeArguments="x:Boolean" Name="isSQL1Operational">
            <Variable.Default>
              <mca:CSharpValue x:TypeArguments="x:Boolean">false;</mca:CSharpValue>
            </Variable.Default>
          </Variable>
          <Variable x:TypeArguments="x:Boolean" Name="SQL1Launched">
            <Variable.Default>
              <mca:CSharpValue x:TypeArguments="x:Boolean">false;</mca:CSharpValue>
            </Variable.Default>
          </Variable>
        </Sequence.Variables>
        <While sap2010:WorkflowViewState.IdRef="While_1">
          <While.Condition>
            <mca:CSharpValue x:TypeArguments="x:Boolean">!SQL1Launched;</mca:CSharpValue>
          </While.Condition>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_15">
            <TryCatch sap2010:WorkflowViewState.IdRef="TryCatch_1">
              <TryCatch.Try>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_14">
                  <Delay DisplayName="Parallelism Delay" sap2010:WorkflowViewState.IdRef="Delay_12">
                    <InArgument x:TypeArguments="x:TimeSpan">
                      <mca:CSharpValue x:TypeArguments="x:TimeSpan">ParallelismDelay</mca:CSharpValue>
                    </InArgument>
                  </Delay>
                  <rna:LaunchServer DisplayName="Launch SQL Server 1" sap2010:WorkflowViewState.IdRef="LaunchServer_2">
                    <rna:LaunchServer.rsAccountID>
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String">rsAccountNo</mca:CSharpValue>
                      </InArgument>
                    </rna:LaunchServer.rsAccountID>
                    <rna:LaunchServer.rsOAuthToken>
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String">rsOauthRefreshToken</mca:CSharpValue>
                      </InArgument>
                    </rna:LaunchServer.rsOAuthToken>
                    <rna:LaunchServer.rsPassword>
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String">rsPassword</mca:CSharpValue>
                      </InArgument>
                    </rna:LaunchServer.rsPassword>
                    <rna:LaunchServer.rsUserName>
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String">rsUsername</mca:CSharpValue>
                      </InArgument>
                    </rna:LaunchServer.rsUserName>
                    <rna:LaunchServer.serverID>
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String">sqlServerIDs[0]</mca:CSharpValue>
                      </InArgument>
                    </rna:LaunchServer.serverID>
                    <rna:LaunchServer.serverLaunched>
                      <OutArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpReference x:TypeArguments="x:Boolean">SQL1Launched</mca:CSharpReference>
                      </OutArgument>
                    </rna:LaunchServer.serverLaunched>
                  </rna:LaunchServer>
                </Sequence>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="rn:RightScaleAPIException" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                  <ActivityAction x:TypeArguments="rn:RightScaleAPIException">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="rn:RightScaleAPIException" Name="exception" />
                    </ActivityAction.Argument>
                    <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_1">
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String" xml:space="preserve">"  Build SQL Server 1 (Primary) - Server cannot be launched due to API error: " + exception.ErrorData + " " + exception.Message;</mca:CSharpValue>
                      </InArgument>
                    </WriteLine>
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
            </TryCatch>
          </Sequence>
        </While>
        <Delay DisplayName="Parallelism Delay" sap2010:WorkflowViewState.IdRef="Delay_3">
          <InArgument x:TypeArguments="x:TimeSpan">
            <mca:CSharpValue x:TypeArguments="x:TimeSpan">ParallelismDelay</mca:CSharpValue>
          </InArgument>
        </Delay>
        <DoWhile DisplayName="Wait for SQL1 to become operational" sap2010:WorkflowViewState.IdRef="DoWhile_1">
          <DoWhile.Condition>
            <mca:CSharpValue x:TypeArguments="x:Boolean">!isSQL1Operational &amp;&amp; currentSQLServerState != "stranded";</mca:CSharpValue>
          </DoWhile.Condition>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_10">
            <Delay DisplayName="RS API Query Delay" sap2010:WorkflowViewState.IdRef="Delay_4">
              <InArgument x:TypeArguments="x:TimeSpan">
                <mca:CSharpValue x:TypeArguments="x:TimeSpan">APIQueryDelay</mca:CSharpValue>
              </InArgument>
            </Delay>
            <rna:GetServerState sap2010:WorkflowViewState.IdRef="GetServerState_1" successSate="operational">
              <rna:GetServerState.isComplete>
                <OutArgument x:TypeArguments="x:Boolean">
                  <mca:CSharpReference x:TypeArguments="x:Boolean">isSQL1Operational</mca:CSharpReference>
                </OutArgument>
              </rna:GetServerState.isComplete>
              <rna:GetServerState.rsAccountID>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String">rsAccountNo</mca:CSharpValue>
                </InArgument>
              </rna:GetServerState.rsAccountID>
              <rna:GetServerState.rsOAuthToken>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String">rsOauthRefreshToken</mca:CSharpValue>
                </InArgument>
              </rna:GetServerState.rsOAuthToken>
              <rna:GetServerState.rsPassword>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String">rsPassword</mca:CSharpValue>
                </InArgument>
              </rna:GetServerState.rsPassword>
              <rna:GetServerState.rsUserName>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String">rsUsername</mca:CSharpValue>
                </InArgument>
              </rna:GetServerState.rsUserName>
              <rna:GetServerState.serverID>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String">sqlServerIDs[0]</mca:CSharpValue>
                </InArgument>
              </rna:GetServerState.serverID>
              <rna:GetServerState.serverState>
                <OutArgument x:TypeArguments="x:String">
                  <mca:CSharpReference x:TypeArguments="x:String">currentSQLServerState</mca:CSharpReference>
                </OutArgument>
              </rna:GetServerState.serverState>
            </rna:GetServerState>
          </Sequence>
        </DoWhile>
        <If DisplayName="Check to make sure that server has not stranded" sap2010:WorkflowViewState.IdRef="If_1">
          <If.Condition>
            <InArgument x:TypeArguments="x:Boolean">
              <mca:CSharpValue x:TypeArguments="x:Boolean">currentSQLServerState.ToLower().Equals("stranded")</mca:CSharpValue>
            </InArgument>
          </If.Condition>
          <If.Then>
            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_18">
              <Throw DisplayName="Throw Error" sap2010:WorkflowViewState.IdRef="Throw_1">
                <InArgument x:TypeArguments="s:Exception">
                  <mca:CSharpValue x:TypeArguments="s:Exception">new RightScale.netClient.RightScaleAPIException("SQL Server 1 ended in a state of 'stranded'");</mca:CSharpValue>
                </InArgument>
              </Throw>
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence DisplayName="Run operational scripts" sap2010:WorkflowViewState.IdRef="Sequence_8">
              <Delay DisplayName="Parallelism Delay" sap2010:WorkflowViewState.IdRef="Delay_17">
                <InArgument x:TypeArguments="x:TimeSpan">
                  <mca:CSharpValue x:TypeArguments="x:TimeSpan">ParallelismDelay</mca:CSharpValue>
                </InArgument>
              </Delay>
              <rna:RunScriptOrRecipe inputs="{x:Null}" taskID="{x:Null}" DisplayName="Restore DB" sap2010:WorkflowViewState.IdRef="RunScriptOrRecipe_1" ignoreLock="True" scriptIdOrRecipeName="438636001">
                <rna:RunScriptOrRecipe.rsAccountID>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">rsAccountNo</mca:CSharpValue>
                  </InArgument>
                </rna:RunScriptOrRecipe.rsAccountID>
                <rna:RunScriptOrRecipe.rsOAuthToken>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">rsOauthRefreshToken</mca:CSharpValue>
                  </InArgument>
                </rna:RunScriptOrRecipe.rsOAuthToken>
                <rna:RunScriptOrRecipe.rsPassword>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">rsPassword</mca:CSharpValue>
                  </InArgument>
                </rna:RunScriptOrRecipe.rsPassword>
                <rna:RunScriptOrRecipe.rsUserName>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">rsUsername</mca:CSharpValue>
                  </InArgument>
                </rna:RunScriptOrRecipe.rsUserName>
                <rna:RunScriptOrRecipe.serverID>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">sqlServerIDs[0]</mca:CSharpValue>
                  </InArgument>
                </rna:RunScriptOrRecipe.serverID>
              </rna:RunScriptOrRecipe>
              <Delay DisplayName="Parallelism Delay" sap2010:WorkflowViewState.IdRef="Delay_18">
                <InArgument x:TypeArguments="x:TimeSpan">
                  <mca:CSharpValue x:TypeArguments="x:TimeSpan">ParallelismDelay</mca:CSharpValue>
                </InArgument>
              </Delay>
              <rna:RunScriptOrRecipe inputs="{x:Null}" taskID="{x:Null}" DisplayName="Create DB User" sap2010:WorkflowViewState.IdRef="RunScriptOrRecipe_2" ignoreLock="True" scriptIdOrRecipeName="438620001">
                <rna:RunScriptOrRecipe.rsAccountID>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">rsAccountNo</mca:CSharpValue>
                  </InArgument>
                </rna:RunScriptOrRecipe.rsAccountID>
                <rna:RunScriptOrRecipe.rsOAuthToken>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">rsOauthRefreshToken</mca:CSharpValue>
                  </InArgument>
                </rna:RunScriptOrRecipe.rsOAuthToken>
                <rna:RunScriptOrRecipe.rsPassword>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">rsPassword</mca:CSharpValue>
                  </InArgument>
                </rna:RunScriptOrRecipe.rsPassword>
                <rna:RunScriptOrRecipe.rsUserName>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">rsUsername</mca:CSharpValue>
                  </InArgument>
                </rna:RunScriptOrRecipe.rsUserName>
                <rna:RunScriptOrRecipe.serverID>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">sqlServerIDs[0]</mca:CSharpValue>
                  </InArgument>
                </rna:RunScriptOrRecipe.serverID>
              </rna:RunScriptOrRecipe>
            </Sequence>
          </If.Else>
        </If>
      </Sequence>
      <Sequence DisplayName="Launch SQL Server 2" sap2010:WorkflowViewState.IdRef="Sequence_5">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:Boolean" Name="sqlServer2Launched">
            <Variable.Default>
              <mca:CSharpValue x:TypeArguments="x:Boolean">false;</mca:CSharpValue>
            </Variable.Default>
          </Variable>
          <Variable x:TypeArguments="x:String" Default="unknown" Name="sqlServer2State" />
          <Variable x:TypeArguments="x:Boolean" Name="isLaunchComplete">
            <Variable.Default>
              <mca:CSharpValue x:TypeArguments="x:Boolean">false;</mca:CSharpValue>
            </Variable.Default>
          </Variable>
        </Sequence.Variables>
        <Delay DisplayName="Wait 2 Mins to start launching SQL 2" sap2010:WorkflowViewState.IdRef="Delay_22">
          <InArgument x:TypeArguments="x:TimeSpan">
            <mca:CSharpValue x:TypeArguments="x:TimeSpan">new TimeSpan(0, 2, 0);</mca:CSharpValue>
          </InArgument>
        </Delay>
        <TryCatch sap2010:WorkflowViewState.IdRef="TryCatch_3">
          <TryCatch.Try>
            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_17">
              <Delay DisplayName="Parallelism Delay" sap2010:WorkflowViewState.IdRef="Delay_11">
                <InArgument x:TypeArguments="x:TimeSpan">
                  <mca:CSharpValue x:TypeArguments="x:TimeSpan">ParallelismDelay</mca:CSharpValue>
                </InArgument>
              </Delay>
              <rna:LaunchServer DisplayName="Launch SQL Server 2" sap2010:WorkflowViewState.IdRef="LaunchServer_3">
                <rna:LaunchServer.rsAccountID>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">rsAccountNo</mca:CSharpValue>
                  </InArgument>
                </rna:LaunchServer.rsAccountID>
                <rna:LaunchServer.rsOAuthToken>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">rsOauthRefreshToken</mca:CSharpValue>
                  </InArgument>
                </rna:LaunchServer.rsOAuthToken>
                <rna:LaunchServer.rsPassword>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">rsPassword</mca:CSharpValue>
                  </InArgument>
                </rna:LaunchServer.rsPassword>
                <rna:LaunchServer.rsUserName>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">rsUsername</mca:CSharpValue>
                  </InArgument>
                </rna:LaunchServer.rsUserName>
                <rna:LaunchServer.serverID>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">sqlServerIDs[1]</mca:CSharpValue>
                  </InArgument>
                </rna:LaunchServer.serverID>
                <rna:LaunchServer.serverLaunched>
                  <OutArgument x:TypeArguments="x:Boolean">
                    <mca:CSharpReference x:TypeArguments="x:Boolean">sqlServer2Launched</mca:CSharpReference>
                  </OutArgument>
                </rna:LaunchServer.serverLaunched>
              </rna:LaunchServer>
            </Sequence>
          </TryCatch.Try>
          <TryCatch.Catches>
            <Catch x:TypeArguments="rn:RightScaleAPIException" sap2010:WorkflowViewState.IdRef="Catch`1_3">
              <ActivityAction x:TypeArguments="rn:RightScaleAPIException">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="rn:RightScaleAPIException" Name="exception" />
                </ActivityAction.Argument>
                <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_3">
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String" xml:space="preserve">"  Launch SQL Server 2 - Server cannot be launched due to API error: " + exception.ErrorData + " " + exception.Message;</mca:CSharpValue>
                  </InArgument>
                </WriteLine>
              </ActivityAction>
            </Catch>
          </TryCatch.Catches>
        </TryCatch>
        <Delay DisplayName="Parallelism Delay" sap2010:WorkflowViewState.IdRef="Delay_9">
          <InArgument x:TypeArguments="x:TimeSpan">
            <mca:CSharpValue x:TypeArguments="x:TimeSpan">ParallelismDelay</mca:CSharpValue>
          </InArgument>
        </Delay>
        <DoWhile DisplayName="Wait for SQL2 to become operational" sap2010:WorkflowViewState.IdRef="DoWhile_3">
          <DoWhile.Condition>
            <mca:CSharpValue x:TypeArguments="x:Boolean">!isLaunchComplete &amp;&amp; sqlServer2State.ToLower() != "stranded";</mca:CSharpValue>
          </DoWhile.Condition>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_12">
            <Delay DisplayName="RS API Query Delay" sap2010:WorkflowViewState.IdRef="Delay_8">
              <InArgument x:TypeArguments="x:TimeSpan">
                <mca:CSharpValue x:TypeArguments="x:TimeSpan">APIQueryDelay</mca:CSharpValue>
              </InArgument>
            </Delay>
            <rna:GetServerState sap2010:WorkflowViewState.IdRef="GetServerState_3">
              <rna:GetServerState.isComplete>
                <OutArgument x:TypeArguments="x:Boolean">
                  <mca:CSharpReference x:TypeArguments="x:Boolean">isLaunchComplete</mca:CSharpReference>
                </OutArgument>
              </rna:GetServerState.isComplete>
              <rna:GetServerState.rsAccountID>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String">rsAccountNo</mca:CSharpValue>
                </InArgument>
              </rna:GetServerState.rsAccountID>
              <rna:GetServerState.rsOAuthToken>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String">rsOauthRefreshToken</mca:CSharpValue>
                </InArgument>
              </rna:GetServerState.rsOAuthToken>
              <rna:GetServerState.rsPassword>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String">rsPassword</mca:CSharpValue>
                </InArgument>
              </rna:GetServerState.rsPassword>
              <rna:GetServerState.rsUserName>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String">rsUsername</mca:CSharpValue>
                </InArgument>
              </rna:GetServerState.rsUserName>
              <rna:GetServerState.serverID>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String">sqlServerIDs[1]</mca:CSharpValue>
                </InArgument>
              </rna:GetServerState.serverID>
              <rna:GetServerState.serverState>
                <OutArgument x:TypeArguments="x:String">
                  <mca:CSharpReference x:TypeArguments="x:String">sqlServer2State</mca:CSharpReference>
                </OutArgument>
              </rna:GetServerState.serverState>
              <rna:GetServerState.successSate>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String">"operational";</mca:CSharpValue>
                </InArgument>
              </rna:GetServerState.successSate>
            </rna:GetServerState>
          </Sequence>
        </DoWhile>
        <If sap2010:WorkflowViewState.IdRef="If_3">
          <If.Condition>
            <InArgument x:TypeArguments="x:Boolean">
              <mca:CSharpValue x:TypeArguments="x:Boolean">sqlServer2State.ToLower().Equals("stranded")</mca:CSharpValue>
            </InArgument>
          </If.Condition>
          <If.Then>
            <Throw DisplayName="Throw Error" sap2010:WorkflowViewState.IdRef="Throw_3">
              <InArgument x:TypeArguments="s:Exception">
                <mca:CSharpValue x:TypeArguments="s:Exception">new RightScale.netClient.RightScaleAPIException("SQL Server 2 ended in a state of 'stranded'");</mca:CSharpValue>
              </InArgument>
            </Throw>
          </If.Then>
        </If>
      </Sequence>
      <Sequence DisplayName="Launch first ServerArray Instance" sap2010:WorkflowViewState.IdRef="Sequence_22">
        <Delay DisplayName="Wait 4 mins to Launch Array Instance" sap2010:WorkflowViewState.IdRef="Delay_20">
          <InArgument x:TypeArguments="x:TimeSpan">
            <mca:CSharpValue x:TypeArguments="x:TimeSpan">new TimeSpan(0,4,0)</mca:CSharpValue>
          </InArgument>
        </Delay>
        <rna:LaunchServerArray isLaunched="{x:Null}" serverID="{x:Null}" DisplayName="Launch ServerArray Instance" sap2010:WorkflowViewState.IdRef="LaunchServerArray_2">
          <rna:LaunchServerArray.rsAccountID>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">rsAccountNo</mca:CSharpValue>
            </InArgument>
          </rna:LaunchServerArray.rsAccountID>
          <rna:LaunchServerArray.rsOAuthToken>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">rsOauthRefreshToken</mca:CSharpValue>
            </InArgument>
          </rna:LaunchServerArray.rsOAuthToken>
          <rna:LaunchServerArray.rsPassword>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">rsPassword</mca:CSharpValue>
            </InArgument>
          </rna:LaunchServerArray.rsPassword>
          <rna:LaunchServerArray.rsUserName>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">rsUsername</mca:CSharpValue>
            </InArgument>
          </rna:LaunchServerArray.rsUserName>
          <rna:LaunchServerArray.serverArrayID>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">serverArrayID</mca:CSharpValue>
            </InArgument>
          </rna:LaunchServerArray.serverArrayID>
        </rna:LaunchServerArray>
      </Sequence>
      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_26">
        <Delay DisplayName="Wait 6 Mins to start launching LB's" sap2010:WorkflowViewState.IdRef="Delay_23">
          <InArgument x:TypeArguments="x:TimeSpan">
            <mca:CSharpValue x:TypeArguments="x:TimeSpan">new TimeSpan(0, 4, 0);</mca:CSharpValue>
          </InArgument>
        </Delay>
        <ForEach x:TypeArguments="x:String" DisplayName="Launch Load Balancers" sap2010:WorkflowViewState.IdRef="ForEach`1_2">
          <ForEach.Values>
            <InArgument x:TypeArguments="scg:IEnumerable(x:String)">
              <mca:CSharpValue x:TypeArguments="scg:IEnumerable(x:String)">lbServerIDs</mca:CSharpValue>
            </InArgument>
          </ForEach.Values>
          <ActivityAction x:TypeArguments="x:String">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:String" Name="item" />
            </ActivityAction.Argument>
            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_21">
              <Sequence DisplayName="Launch LB Server" sap2010:WorkflowViewState.IdRef="Sequence_4">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:Boolean" Name="isLaunchBooting">
                    <Variable.Default>
                      <mca:CSharpValue x:TypeArguments="x:Boolean">false;</mca:CSharpValue>
                    </Variable.Default>
                  </Variable>
                  <Variable x:TypeArguments="x:String" Name="currentState">
                    <Variable.Default>
                      <mca:CSharpValue x:TypeArguments="x:String">"unknown";</mca:CSharpValue>
                    </Variable.Default>
                  </Variable>
                </Sequence.Variables>
                <TryCatch sap2010:WorkflowViewState.IdRef="TryCatch_2">
                  <TryCatch.Try>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_16">
                      <Delay DisplayName="Parallelism Delay" sap2010:WorkflowViewState.IdRef="Delay_6">
                        <InArgument x:TypeArguments="x:TimeSpan">
                          <mca:CSharpValue x:TypeArguments="x:TimeSpan">ParallelismDelay</mca:CSharpValue>
                        </InArgument>
                      </Delay>
                      <rna:LaunchServer serverLaunched="{x:Null}" sap2010:WorkflowViewState.IdRef="LaunchServer_1">
                        <rna:LaunchServer.rsAccountID>
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String">rsAccountNo</mca:CSharpValue>
                          </InArgument>
                        </rna:LaunchServer.rsAccountID>
                        <rna:LaunchServer.rsOAuthToken>
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String">rsOauthRefreshToken</mca:CSharpValue>
                          </InArgument>
                        </rna:LaunchServer.rsOAuthToken>
                        <rna:LaunchServer.rsPassword>
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String">rsPassword</mca:CSharpValue>
                          </InArgument>
                        </rna:LaunchServer.rsPassword>
                        <rna:LaunchServer.rsUserName>
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String">rsUsername</mca:CSharpValue>
                          </InArgument>
                        </rna:LaunchServer.rsUserName>
                        <rna:LaunchServer.serverID>
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String">item</mca:CSharpValue>
                          </InArgument>
                        </rna:LaunchServer.serverID>
                      </rna:LaunchServer>
                    </Sequence>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="rn:RightScaleAPIException" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                      <ActivityAction x:TypeArguments="rn:RightScaleAPIException">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="rn:RightScaleAPIException" Name="exception" />
                        </ActivityAction.Argument>
                        <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_2">
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String">"Server" + (lbServerIDs.IndexOf(item) + 1).ToString() + " of " + lbServerIDs.Count.ToString() + " cannot be launched due to API error: " + exception.ErrorData + " " + exception.Message;</mca:CSharpValue>
                          </InArgument>
                        </WriteLine>
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
                <Delay DisplayName="Parallelism Delay" sap2010:WorkflowViewState.IdRef="Delay_13">
                  <InArgument x:TypeArguments="x:TimeSpan">
                    <mca:CSharpValue x:TypeArguments="x:TimeSpan">ParallelismDelay</mca:CSharpValue>
                  </InArgument>
                </Delay>
                <DoWhile DisplayName="Wait for LB Server to become operational" sap2010:WorkflowViewState.IdRef="DoWhile_2">
                  <DoWhile.Condition>
                    <mca:CSharpValue x:TypeArguments="x:Boolean">!isLaunchBooting &amp;&amp; currentState.ToLower() != "stranded";</mca:CSharpValue>
                  </DoWhile.Condition>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_11">
                    <Delay DisplayName="RS API Query Delay" sap2010:WorkflowViewState.IdRef="Delay_7">
                      <InArgument x:TypeArguments="x:TimeSpan">
                        <mca:CSharpValue x:TypeArguments="x:TimeSpan">APIQueryDelay</mca:CSharpValue>
                      </InArgument>
                    </Delay>
                    <rna:GetServerState sap2010:WorkflowViewState.IdRef="GetServerState_2">
                      <rna:GetServerState.isComplete>
                        <OutArgument x:TypeArguments="x:Boolean">
                          <mca:CSharpReference x:TypeArguments="x:Boolean">isLaunchBooting</mca:CSharpReference>
                        </OutArgument>
                      </rna:GetServerState.isComplete>
                      <rna:GetServerState.rsAccountID>
                        <InArgument x:TypeArguments="x:String">
                          <mca:CSharpValue x:TypeArguments="x:String">rsAccountNo</mca:CSharpValue>
                        </InArgument>
                      </rna:GetServerState.rsAccountID>
                      <rna:GetServerState.rsOAuthToken>
                        <InArgument x:TypeArguments="x:String">
                          <mca:CSharpValue x:TypeArguments="x:String">rsOauthRefreshToken</mca:CSharpValue>
                        </InArgument>
                      </rna:GetServerState.rsOAuthToken>
                      <rna:GetServerState.rsPassword>
                        <InArgument x:TypeArguments="x:String">
                          <mca:CSharpValue x:TypeArguments="x:String">rsPassword</mca:CSharpValue>
                        </InArgument>
                      </rna:GetServerState.rsPassword>
                      <rna:GetServerState.rsUserName>
                        <InArgument x:TypeArguments="x:String">
                          <mca:CSharpValue x:TypeArguments="x:String">rsUsername</mca:CSharpValue>
                        </InArgument>
                      </rna:GetServerState.rsUserName>
                      <rna:GetServerState.serverID>
                        <InArgument x:TypeArguments="x:String">
                          <mca:CSharpValue x:TypeArguments="x:String">item</mca:CSharpValue>
                        </InArgument>
                      </rna:GetServerState.serverID>
                      <rna:GetServerState.serverState>
                        <OutArgument x:TypeArguments="x:String">
                          <mca:CSharpReference x:TypeArguments="x:String">currentState</mca:CSharpReference>
                        </OutArgument>
                      </rna:GetServerState.serverState>
                      <rna:GetServerState.successSate>
                        <InArgument x:TypeArguments="x:String">
                          <mca:CSharpValue x:TypeArguments="x:String">"booting";</mca:CSharpValue>
                        </InArgument>
                      </rna:GetServerState.successSate>
                    </rna:GetServerState>
                  </Sequence>
                </DoWhile>
                <If sap2010:WorkflowViewState.IdRef="If_2">
                  <If.Condition>
                    <InArgument x:TypeArguments="x:Boolean">
                      <mca:CSharpValue x:TypeArguments="x:Boolean">currentState.ToLower().Equals("stranded")</mca:CSharpValue>
                    </InArgument>
                  </If.Condition>
                  <If.Then>
                    <Throw DisplayName="Throw Error" sap2010:WorkflowViewState.IdRef="Throw_2">
                      <InArgument x:TypeArguments="s:Exception">
                        <mca:CSharpValue x:TypeArguments="s:Exception">new RightScale.netClient.RightScaleAPIException("Load Balancer Launch ended in a state of 'stranded'");</mca:CSharpValue>
                      </InArgument>
                    </Throw>
                  </If.Then>
                </If>
              </Sequence>
            </Sequence>
          </ActivityAction>
        </ForEach>
      </Sequence>
    </Parallel>
    <Sequence DisplayName="Set LB Public DNS" sap2010:WorkflowViewState.IdRef="Sequence_23">
      <Sequence.Variables>
        <Variable x:TypeArguments="scg:List(x:String)" Name="lb1PublicIPs" />
        <Variable x:TypeArguments="scg:List(x:String)" Name="lb2PublicIPs" />
      </Sequence.Variables>
      <Parallel sap2010:WorkflowViewState.IdRef="Parallel_7">
        <Sequence DisplayName="Update LB1 DNS" sap2010:WorkflowViewState.IdRef="Sequence_24">
          <rna:GetServerCurrentInstanceInfo currentState="{x:Null}" instanceID="{x:Null}" instanceName="{x:Null}" osPlatform="{x:Null}" privateDNSNames="{x:Null}" privateIPAddresses="{x:Null}" publicDNSNames="{x:Null}" DisplayName="Get LB 1 Instance Info" sap2010:WorkflowViewState.IdRef="GetServerCurrentInstanceInfo_1">
            <rna:GetServerCurrentInstanceInfo.publicIPAddresses>
              <OutArgument x:TypeArguments="scg:List(x:String)">
                <mca:CSharpReference x:TypeArguments="scg:List(x:String)">lb1PublicIPs</mca:CSharpReference>
              </OutArgument>
            </rna:GetServerCurrentInstanceInfo.publicIPAddresses>
            <rna:GetServerCurrentInstanceInfo.rsAccountID>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">rsAccountNo</mca:CSharpValue>
              </InArgument>
            </rna:GetServerCurrentInstanceInfo.rsAccountID>
            <rna:GetServerCurrentInstanceInfo.rsOAuthToken>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">rsOauthRefreshToken</mca:CSharpValue>
              </InArgument>
            </rna:GetServerCurrentInstanceInfo.rsOAuthToken>
            <rna:GetServerCurrentInstanceInfo.rsPassword>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">rsPassword</mca:CSharpValue>
              </InArgument>
            </rna:GetServerCurrentInstanceInfo.rsPassword>
            <rna:GetServerCurrentInstanceInfo.rsUserName>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">rsUsername</mca:CSharpValue>
              </InArgument>
            </rna:GetServerCurrentInstanceInfo.rsUserName>
            <rna:GetServerCurrentInstanceInfo.serverID>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">lbServerIDs[0]</mca:CSharpValue>
              </InArgument>
            </rna:GetServerCurrentInstanceInfo.serverID>
          </rna:GetServerCurrentInstanceInfo>
          <rna:RunScriptOrRecipe taskID="{x:Null}" DisplayName="Update LB1 Public DNS" sap2010:WorkflowViewState.IdRef="RunScriptOrRecipe_5" ignoreLock="True" scriptIdOrRecipeName="438641001">
            <rna:RunScriptOrRecipe.inputs>
              <InArgument x:TypeArguments="scg:List(rn:Input)">
                <mca:CSharpValue x:TypeArguments="scg:List(rn:Input)">new List&lt;RightScale.netClient.Input&gt;() { new RightScale.netClient.Input("DNS_IP_ADDRESS", "text:" + lb1PublicIPs.First&lt;string&gt;()), new RightScale.netClient.Input("DNS_ID", "text:" + lb1DNSID), new RightScale.netClient.Input("DNS_DOMAIN_NAME", "text:" + lbDNSDomainName) };</mca:CSharpValue>
              </InArgument>
            </rna:RunScriptOrRecipe.inputs>
            <rna:RunScriptOrRecipe.rsAccountID>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">rsAccountNo</mca:CSharpValue>
              </InArgument>
            </rna:RunScriptOrRecipe.rsAccountID>
            <rna:RunScriptOrRecipe.rsOAuthToken>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">rsOauthRefreshToken</mca:CSharpValue>
              </InArgument>
            </rna:RunScriptOrRecipe.rsOAuthToken>
            <rna:RunScriptOrRecipe.rsPassword>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">rsPassword</mca:CSharpValue>
              </InArgument>
            </rna:RunScriptOrRecipe.rsPassword>
            <rna:RunScriptOrRecipe.rsUserName>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">rsUsername</mca:CSharpValue>
              </InArgument>
            </rna:RunScriptOrRecipe.rsUserName>
            <rna:RunScriptOrRecipe.serverID>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">sqlServerIDs[0]</mca:CSharpValue>
              </InArgument>
            </rna:RunScriptOrRecipe.serverID>
          </rna:RunScriptOrRecipe>
        </Sequence>
        <Sequence DisplayName="Update LB2 DNS" sap2010:WorkflowViewState.IdRef="Sequence_25">
          <rna:GetServerCurrentInstanceInfo currentState="{x:Null}" instanceID="{x:Null}" instanceName="{x:Null}" osPlatform="{x:Null}" privateDNSNames="{x:Null}" privateIPAddresses="{x:Null}" publicDNSNames="{x:Null}" DisplayName="Get LB2 Instance Info" sap2010:WorkflowViewState.IdRef="GetServerCurrentInstanceInfo_2">
            <rna:GetServerCurrentInstanceInfo.publicIPAddresses>
              <OutArgument x:TypeArguments="scg:List(x:String)">
                <mca:CSharpReference x:TypeArguments="scg:List(x:String)">lb2PublicIPs</mca:CSharpReference>
              </OutArgument>
            </rna:GetServerCurrentInstanceInfo.publicIPAddresses>
            <rna:GetServerCurrentInstanceInfo.rsAccountID>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">rsAccountNo</mca:CSharpValue>
              </InArgument>
            </rna:GetServerCurrentInstanceInfo.rsAccountID>
            <rna:GetServerCurrentInstanceInfo.rsOAuthToken>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">rsOauthRefreshToken</mca:CSharpValue>
              </InArgument>
            </rna:GetServerCurrentInstanceInfo.rsOAuthToken>
            <rna:GetServerCurrentInstanceInfo.rsPassword>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">rsPassword</mca:CSharpValue>
              </InArgument>
            </rna:GetServerCurrentInstanceInfo.rsPassword>
            <rna:GetServerCurrentInstanceInfo.rsUserName>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">rsUsername</mca:CSharpValue>
              </InArgument>
            </rna:GetServerCurrentInstanceInfo.rsUserName>
            <rna:GetServerCurrentInstanceInfo.serverID>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">lbServerIDs[1]</mca:CSharpValue>
              </InArgument>
            </rna:GetServerCurrentInstanceInfo.serverID>
          </rna:GetServerCurrentInstanceInfo>
          <rna:RunScriptOrRecipe taskID="{x:Null}" DisplayName="Update LB2 Public DNS" sap2010:WorkflowViewState.IdRef="RunScriptOrRecipe_6" ignoreLock="True" scriptIdOrRecipeName="438641001">
            <rna:RunScriptOrRecipe.inputs>
              <InArgument x:TypeArguments="scg:List(rn:Input)">
                <mca:CSharpValue x:TypeArguments="scg:List(rn:Input)">new List&lt;RightScale.netClient.Input&gt;() { new RightScale.netClient.Input("DNS_IP_ADDRESS", "text:" + lb2PublicIPs.First&lt;string&gt;()), new RightScale.netClient.Input("DNS_ID", "text:" + lb2DNSID), new RightScale.netClient.Input("DNS_DOMAIN_NAME", "text:" + lbDNSDomainName) };</mca:CSharpValue>
              </InArgument>
            </rna:RunScriptOrRecipe.inputs>
            <rna:RunScriptOrRecipe.rsAccountID>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">rsAccountNo</mca:CSharpValue>
              </InArgument>
            </rna:RunScriptOrRecipe.rsAccountID>
            <rna:RunScriptOrRecipe.rsOAuthToken>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">rsOauthRefreshToken</mca:CSharpValue>
              </InArgument>
            </rna:RunScriptOrRecipe.rsOAuthToken>
            <rna:RunScriptOrRecipe.rsPassword>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">rsPassword</mca:CSharpValue>
              </InArgument>
            </rna:RunScriptOrRecipe.rsPassword>
            <rna:RunScriptOrRecipe.rsUserName>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">rsUsername</mca:CSharpValue>
              </InArgument>
            </rna:RunScriptOrRecipe.rsUserName>
            <rna:RunScriptOrRecipe.serverID>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">sqlServerIDs[1]</mca:CSharpValue>
              </InArgument>
            </rna:RunScriptOrRecipe.serverID>
          </rna:RunScriptOrRecipe>
        </Sequence>
      </Parallel>
    </Sequence>
    <Parallel DisplayName="Parallel Launch Phase 2 (Server Array and SQL Server 2 init mirroring)" sap2010:WorkflowViewState.IdRef="Parallel_4">
      <Sequence DisplayName="Enable IIS Array" sap2010:WorkflowViewState.IdRef="Sequence_6">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:Boolean" Name="arrayEnabled">
            <Variable.Default>
              <mca:CSharpValue x:TypeArguments="x:Boolean">false;</mca:CSharpValue>
            </Variable.Default>
          </Variable>
        </Sequence.Variables>
        <rna:EnableServerArray sap2010:WorkflowViewState.IdRef="EnableServerArray_1">
          <rna:EnableServerArray.isEnabled>
            <OutArgument x:TypeArguments="x:Boolean">
              <mca:CSharpReference x:TypeArguments="x:Boolean">arrayEnabled</mca:CSharpReference>
            </OutArgument>
          </rna:EnableServerArray.isEnabled>
          <rna:EnableServerArray.rsAccountID>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">rsAccountNo</mca:CSharpValue>
            </InArgument>
          </rna:EnableServerArray.rsAccountID>
          <rna:EnableServerArray.rsOAuthToken>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">rsOauthRefreshToken</mca:CSharpValue>
            </InArgument>
          </rna:EnableServerArray.rsOAuthToken>
          <rna:EnableServerArray.rsPassword>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">rsPassword</mca:CSharpValue>
            </InArgument>
          </rna:EnableServerArray.rsPassword>
          <rna:EnableServerArray.rsUserName>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">rsUsername</mca:CSharpValue>
            </InArgument>
          </rna:EnableServerArray.rsUserName>
          <rna:EnableServerArray.serverArrayID>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">serverArrayID</mca:CSharpValue>
            </InArgument>
          </rna:EnableServerArray.serverArrayID>
        </rna:EnableServerArray>
        <Delay DisplayName="Parallelism Delay" sap2010:WorkflowViewState.IdRef="Delay_21">
          <InArgument x:TypeArguments="x:TimeSpan">
            <mca:CSharpValue x:TypeArguments="x:TimeSpan">ParallelismDelay</mca:CSharpValue>
          </InArgument>
        </Delay>
        <While sap2010:WorkflowViewState.IdRef="While_2">
          <While.Variables>
            <Variable x:TypeArguments="x:Int32" Name="numActiveServers">
              <Variable.Default>
                <mca:CSharpValue x:TypeArguments="x:Int32">0;</mca:CSharpValue>
              </Variable.Default>
            </Variable>
            <Variable x:TypeArguments="x:Boolean" Name="isArrayReady">
              <Variable.Default>
                <mca:CSharpValue x:TypeArguments="x:Boolean">false;</mca:CSharpValue>
              </Variable.Default>
            </Variable>
          </While.Variables>
          <While.Condition>
            <mca:CSharpValue x:TypeArguments="x:Boolean">!isArrayReady;</mca:CSharpValue>
          </While.Condition>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_19">
            <Delay DisplayName="Parallelism Delay" sap2010:WorkflowViewState.IdRef="Delay_14">
              <InArgument x:TypeArguments="x:TimeSpan">
                <mca:CSharpValue x:TypeArguments="x:TimeSpan">ParallelismDelay</mca:CSharpValue>
              </InArgument>
            </Delay>
            <rna:GetServerArrayState sap2010:WorkflowViewState.IdRef="GetServerArrayState_1" minNumServers="1">
              <rna:GetServerArrayState.isOperational>
                <OutArgument x:TypeArguments="x:Boolean">
                  <mca:CSharpReference x:TypeArguments="x:Boolean">isArrayReady</mca:CSharpReference>
                </OutArgument>
              </rna:GetServerArrayState.isOperational>
              <rna:GetServerArrayState.operationalCount>
                <OutArgument x:TypeArguments="x:Int32">
                  <mca:CSharpReference x:TypeArguments="x:Int32">numActiveServers</mca:CSharpReference>
                </OutArgument>
              </rna:GetServerArrayState.operationalCount>
              <rna:GetServerArrayState.rsAccountID>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String">rsAccountNo</mca:CSharpValue>
                </InArgument>
              </rna:GetServerArrayState.rsAccountID>
              <rna:GetServerArrayState.rsOAuthToken>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String">rsOauthRefreshToken</mca:CSharpValue>
                </InArgument>
              </rna:GetServerArrayState.rsOAuthToken>
              <rna:GetServerArrayState.rsPassword>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String">rsPassword</mca:CSharpValue>
                </InArgument>
              </rna:GetServerArrayState.rsPassword>
              <rna:GetServerArrayState.rsUserName>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String">rsUsername</mca:CSharpValue>
                </InArgument>
              </rna:GetServerArrayState.rsUserName>
              <rna:GetServerArrayState.serverArrayID>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String">serverArrayID</mca:CSharpValue>
                </InArgument>
              </rna:GetServerArrayState.serverArrayID>
            </rna:GetServerArrayState>
          </Sequence>
        </While>
      </Sequence>
      <Sequence DisplayName="Init mirroring" sap2010:WorkflowViewState.IdRef="Sequence_7">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="initMirroringTaskID" />
        </Sequence.Variables>
        <Delay DisplayName="Parallelism Delay" sap2010:WorkflowViewState.IdRef="Delay_19">
          <InArgument x:TypeArguments="x:TimeSpan">
            <mca:CSharpValue x:TypeArguments="x:TimeSpan">ParallelismDelay</mca:CSharpValue>
          </InArgument>
        </Delay>
        <rna:RunScriptOrRecipe inputs="{x:Null}" taskID="{x:Null}" DisplayName="SQL 1 - Init Primary" sap2010:WorkflowViewState.IdRef="RunScriptOrRecipe_3" ignoreLock="True" scriptIdOrRecipeName="438622001">
          <rna:RunScriptOrRecipe.rsAccountID>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">rsAccountNo</mca:CSharpValue>
            </InArgument>
          </rna:RunScriptOrRecipe.rsAccountID>
          <rna:RunScriptOrRecipe.rsOAuthToken>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">rsOauthRefreshToken</mca:CSharpValue>
            </InArgument>
          </rna:RunScriptOrRecipe.rsOAuthToken>
          <rna:RunScriptOrRecipe.rsPassword>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">rsPassword</mca:CSharpValue>
            </InArgument>
          </rna:RunScriptOrRecipe.rsPassword>
          <rna:RunScriptOrRecipe.rsUserName>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">rsUsername</mca:CSharpValue>
            </InArgument>
          </rna:RunScriptOrRecipe.rsUserName>
          <rna:RunScriptOrRecipe.serverID>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">sqlServerIDs[0]</mca:CSharpValue>
            </InArgument>
          </rna:RunScriptOrRecipe.serverID>
        </rna:RunScriptOrRecipe>
        <Delay DisplayName="Parallelism Delay" sap2010:WorkflowViewState.IdRef="Delay_16">
          <InArgument x:TypeArguments="x:TimeSpan">
            <mca:CSharpValue x:TypeArguments="x:TimeSpan">ParallelismDelay</mca:CSharpValue>
          </InArgument>
        </Delay>
        <rna:RunScriptOrRecipe inputs="{x:Null}" taskID="{x:Null}" DisplayName="Run Init Mirror on Secondary" sap2010:WorkflowViewState.IdRef="RunScriptOrRecipe_4" ignoreLock="True" scriptIdOrRecipeName="438624001">
          <rna:RunScriptOrRecipe.rsAccountID>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">rsAccountNo</mca:CSharpValue>
            </InArgument>
          </rna:RunScriptOrRecipe.rsAccountID>
          <rna:RunScriptOrRecipe.rsOAuthToken>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">rsOauthRefreshToken</mca:CSharpValue>
            </InArgument>
          </rna:RunScriptOrRecipe.rsOAuthToken>
          <rna:RunScriptOrRecipe.rsPassword>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">rsPassword</mca:CSharpValue>
            </InArgument>
          </rna:RunScriptOrRecipe.rsPassword>
          <rna:RunScriptOrRecipe.rsUserName>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">rsUsername</mca:CSharpValue>
            </InArgument>
          </rna:RunScriptOrRecipe.rsUserName>
          <rna:RunScriptOrRecipe.serverID>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">sqlServerIDs[1]</mca:CSharpValue>
            </InArgument>
          </rna:RunScriptOrRecipe.serverID>
        </rna:RunScriptOrRecipe>
      </Sequence>
    </Parallel>
    <Sequence DisplayName="Run Operational Validation" sap2010:WorkflowViewState.IdRef="Sequence_9" />
    <sads:DebugSymbol.Symbol>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</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="ImportPublication_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="ImportPublication_2" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="ImportPublication_3" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="Parallel_6" sap:VirtualizedContainerService.HintSize="1993,86" />
      <sap2010:ViewStateData Id="CreateDeployment_2" sap:VirtualizedContainerService.HintSize="1993,22" />
      <sap2010:ViewStateData Id="CreateServer_3" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="CreateServer_4" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="CreateServerArray_2" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="Parallel_2" sap:VirtualizedContainerService.HintSize="1993,86" />
      <sap2010:ViewStateData Id="UpdateInputs_1" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="UpdateInputs_2" sap:VirtualizedContainerService.HintSize="200,40" />
      <sap2010:ViewStateData Id="Parallel_5" sap:VirtualizedContainerService.HintSize="1993,86" />
      <sap2010:ViewStateData Id="Delay_12" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="LaunchServer_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_14" sap:VirtualizedContainerService.HintSize="222,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_1" sap:VirtualizedContainerService.HintSize="211,59" />
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="404,20">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="418,426" />
      <sap2010:ViewStateData Id="Sequence_15" sap:VirtualizedContainerService.HintSize="440,550">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_1" sap:VirtualizedContainerService.HintSize="469,703" />
      <sap2010:ViewStateData Id="Delay_3" sap:VirtualizedContainerService.HintSize="469,22" />
      <sap2010:ViewStateData Id="Delay_4" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="GetServerState_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="222,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DoWhile_1" sap:VirtualizedContainerService.HintSize="469,365" />
      <sap2010:ViewStateData Id="Throw_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_18" sap:VirtualizedContainerService.HintSize="222,146">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Delay_17" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="RunScriptOrRecipe_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Delay_18" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="RunScriptOrRecipe_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="222,332">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="469,475" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="491,1809">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Delay_22" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Delay_11" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="LaunchServer_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_17" sap:VirtualizedContainerService.HintSize="222,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_3" sap:VirtualizedContainerService.HintSize="211,59" />
      <sap2010:ViewStateData Id="Catch`1_3" sap:VirtualizedContainerService.HintSize="404,20">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_3" sap:VirtualizedContainerService.HintSize="464,426" />
      <sap2010:ViewStateData Id="Delay_9" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Delay_8" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="GetServerState_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_12" sap:VirtualizedContainerService.HintSize="222,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DoWhile_3" sap:VirtualizedContainerService.HintSize="464,365" />
      <sap2010:ViewStateData Id="Throw_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="464,203" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="486,1809">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Delay_20" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="LaunchServerArray_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_22" sap:VirtualizedContainerService.HintSize="222,1809">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Delay_23" sap:VirtualizedContainerService.HintSize="538,22" />
      <sap2010:ViewStateData Id="Delay_6" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="LaunchServer_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_16" sap:VirtualizedContainerService.HintSize="222,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_2" sap:VirtualizedContainerService.HintSize="211,59" />
      <sap2010:ViewStateData Id="Catch`1_2" sap:VirtualizedContainerService.HintSize="404,20">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_2" sap:VirtualizedContainerService.HintSize="464,426" />
      <sap2010:ViewStateData Id="Delay_13" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Delay_7" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="GetServerState_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="222,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DoWhile_2" sap:VirtualizedContainerService.HintSize="464,365" />
      <sap2010:ViewStateData Id="Throw_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="464,203" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="486,1260">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_21" sap:VirtualizedContainerService.HintSize="508,1384">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_2" sap:VirtualizedContainerService.HintSize="538,1529" />
      <sap2010:ViewStateData Id="Sequence_26" sap:VirtualizedContainerService.HintSize="560,1809">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Parallel_3" sap:VirtualizedContainerService.HintSize="1993,1855" />
      <sap2010:ViewStateData Id="GetServerCurrentInstanceInfo_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="RunScriptOrRecipe_5" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_24" sap:VirtualizedContainerService.HintSize="222,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetServerCurrentInstanceInfo_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="RunScriptOrRecipe_6" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_25" sap:VirtualizedContainerService.HintSize="222,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Parallel_7" sap:VirtualizedContainerService.HintSize="598,254" />
      <sap2010:ViewStateData Id="Sequence_23" sap:VirtualizedContainerService.HintSize="1993,378">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="EnableServerArray_1" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Delay_21" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Delay_14" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="GetServerArrayState_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_19" sap:VirtualizedContainerService.HintSize="222,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_2" sap:VirtualizedContainerService.HintSize="464,368" />
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="486,616">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Delay_19" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="RunScriptOrRecipe_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Delay_16" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="RunScriptOrRecipe_4" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="222,616">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Parallel_4" sap:VirtualizedContainerService.HintSize="1993,662" />
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="1993,99">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="2015,3678">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="RightScale._3Tier.Workflow.Workflow1_1" sap:VirtualizedContainerService.HintSize="2055,3758" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>